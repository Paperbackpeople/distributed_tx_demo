syntax = 'proto3';
package tx.v1;
option go_package = "distributed_tx_demo/api/tx/v1;txv1";
/********* 订单 *********/
message OrderItem  { int64 product_id = 1; int32 qty = 2; int32 price = 3; }
message OrderSagaRequest {
  string gid = 1;
  int64 user_id = 2;
  repeated OrderItem items = 3;
  int32 total_amt = 4;
}
message Ack { bool ok = 1; string msg = 2; }

service OrderSvc {
  rpc Execute(OrderSagaRequest) returns (Ack);
  rpc Compensate(OrderSagaRequest) returns (Ack);
}

/********* 库存 *********/
  message StockSagaRequest {
    string gid        = 1;
    int64  product_id = 2;
    int32  qty        = 3;
  }
service StockSvc {
  rpc Execute(StockSagaRequest) returns (Ack);
  rpc Compensate(StockSagaRequest) returns (Ack);
}

/********* 支付 *********/
message PaySagaRequest {
  string gid      = 1;
  int64  user_id  = 2;
  int32  total_amt   = 3;
}
service PaySvc {
  rpc Execute(PaySagaRequest) returns (Ack);
  rpc Compensate(PaySagaRequest) returns (Ack);
}

/********* 通用 *********/
message Gid { string gid = 1; }